"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[37],{8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>a});var t=n(6540);const o={},r=t.createContext(o);function s(e){const i=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:i},e.children)}},9654:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>h,contentTitle:()=>l,default:()=>f,frontMatter:()=>d,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"TechnicalDocs/SDK-intro/buddie-extras/intro","title":"New Module Description and SDK Brief Introduction","description":"1 SDK Important File Description","source":"@site/docs/TechnicalDocs/SDK-intro/buddie-extras/intro.mdx","sourceDirName":"TechnicalDocs/SDK-intro/buddie-extras","slug":"/TechnicalDocs/SDK-intro/buddie-extras/intro","permalink":"/docs/TechnicalDocs/SDK-intro/buddie-extras/intro","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"TechnicalDocsSidebar","previous":{"title":"JL Official Documentation Description","permalink":"/docs/TechnicalDocs/SDK-intro/JL-docs"},"next":{"title":"Speaker Detection Module","permalink":"/docs/TechnicalDocs/SDK-intro/buddie-extras/vad"}}');var o=n(4848),r=n(8453);const s=n.p+"assets/images/board_config-251b4374e40ccd108175d4aab85672e6.png",a=n.p+"assets/images/tasklist-42ed7486b21efbdad9b4ffb9e9040fbb.png",c=n.p+"assets/images/app_main-8a06d68e61e1b22ff0cf8b766705f855.png",d={},l="New Module Description and SDK Brief Introduction",h={},p=[{value:"1 SDK Important File Description",id:"1-sdk-important-file-description",level:2},{value:"1.1 Board Configuration",id:"11-board-configuration",level:3},{value:"1.2 SDK Startup File",id:"12-sdk-startup-file",level:3},{value:"2 Buddie New Module Overview",id:"2-buddie-new-module-overview",level:2}];function u(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"new-module-description-and-sdk-brief-introduction",children:"New Module Description and SDK Brief Introduction"})}),"\n",(0,o.jsx)(i.h2,{id:"1-sdk-important-file-description",children:"1 SDK Important File Description"}),"\n",(0,o.jsx)(i.h3,{id:"11-board-configuration",children:"1.1 Board Configuration"}),"\n",(0,o.jsxs)(i.p,{children:["File location: ",(0,o.jsx)(i.code,{children:"apps\\earphone\\board\\br28\\board_config.h"}),"\r\nIn board_config.h, we select ",(0,o.jsx)(i.code,{children:"CONFIG_BOARD_JL7016G_HYBRID"}),". This activates the following three basic configuration files:"]}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:"board_jl7016g_hybrid_cfg.h"})}),"\n",(0,o.jsx)(i.li,{children:(0,o.jsx)(i.code,{children:"board_jl7016g_hybrid_global_build_cfg.h"})}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"board_jl7016g_hybrid.c"}),"\r\nIn ",(0,o.jsx)(i.code,{children:"board_jl7016g_hybrid_cfg.h"}),", we can further configure pins for peripherals such as UART, IIC, SD, etc."]}),"\n"]}),"\n",(0,o.jsx)("img",{src:s,alt:"firmware",width:"400",style:{display:"block",margin:"0 auto"}}),"\n",(0,o.jsx)(i.h3,{id:"12-sdk-startup-file",children:"1.2 SDK Startup File"}),"\n",(0,o.jsxs)(i.p,{children:["File location: ",(0,o.jsx)(i.code,{children:"apps\\earphone\\app_main.c"}),"\r\nIn ",(0,o.jsx)(i.code,{children:"app_main.c"}),", we can see the SDK startup process. This file can be divided into two parts: ",(0,o.jsx)(i.code,{children:"task_info task_info_table[]"})," and ",(0,o.jsx)(i.code,{children:"app_main()"})]}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["First is ",(0,o.jsx)(i.code,{children:"task_info task_info_table[]"}),", which is a task information table that defines the name, priority, core to run on, stack size, and heap size for each task. Each task corresponds to a specific functional module."]}),"\n"]}),"\n",(0,o.jsx)("img",{src:a,alt:"firmware",width:"400",style:{display:"block",margin:"0 auto"}}),"\n",(0,o.jsxs)(i.ol,{start:"2",children:["\n",(0,o.jsxs)(i.li,{children:["Next is the ",(0,o.jsx)(i.code,{children:"app_main()"})," function, which is the SDK entry function. It creates and starts various tasks according to the configuration in the task information table."]}),"\n"]}),"\n",(0,o.jsx)("img",{src:c,alt:"firmware",width:"400",style:{display:"block",margin:"0 auto"}}),"\n",(0,o.jsx)(i.h2,{id:"2-buddie-new-module-overview",children:"2 Buddie New Module Overview"}),"\n",(0,o.jsx)(i.p,{children:"The Buddie new modules mainly include the following parts:"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsx)(i.li,{children:"Speaker detection"}),"\n",(0,o.jsx)(i.li,{children:"Audio data compression (PCA, OPUS)"}),"\n",(0,o.jsx)(i.li,{children:"Bluetooth data transmission and reception (BLE, SPP)"}),"\n"]})]})}function f(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);